{"mappings":"ACAA,MAAM,UAAuB,YAEzB,aAAc,CACV,KAAK,GACL,IAAI,EAA4B,SAAS,aAAa,CAAC,IACvD,CAAA,EAAa,SAAS,CAAG,kBAEzB,AAD2B,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,QAAS,GACvD,WAAW,CAAC,GACnB,QAAQ,GAAG,CAAC,UAChB,CAEA,WAAW,oBAAqB,CAC5B,MAAO,CAAC,QAAQ,AACpB,CAEA,mBAAoB,CAChB,QAAQ,GAAG,CAAC,eAChB,CAEA,sBAAuB,CACnB,QAAQ,GAAG,CAAC,mBAChB,CAEA,0BAA2B,CACvB,QAAQ,GAAG,CAAC,qBAChB,CACJ,CAEA,eAAe,MAAM,CAAC,mBAAoB,GAC1C,IAAI,EAA0B,SAAS,cAAc,CAAC,MAC3C,OAAP,IACA,EAAI,SAAS,CAAG,mBAChB,EAAI,OAAO,CAAG,WACV,IAAI,EAA4B,SAAS,aAAa,CAAC,oBACvD,SAAS,IAAI,CAAC,WAAW,CAAC,EAC9B,GAEJ,IAAI,EAA0B,SAAS,cAAc,CAAC,SAC3C,OAAP,IACA,EAAI,SAAS,CAAG,sBAChB,EAAI,OAAO,CAAG,WACV,IAAI,EAAmC,SAAS,aAAa,CAAC,mBAC1C,OAAhB,GACA,EAAa,MAAM,EAE3B,GAEJ,IAAI,EAA2B,SAAS,cAAc,CAAC,OAC3C,OAAR,IACA,EAAK,SAAS,CAAG,oBACjB,EAAK,OAAO,CAAG,WACX,IAAI,EAAmC,SAAS,aAAa,CAAC,mBAC1C,OAAhB,GACA,EAAa,YAAY,CAAC,QAAS,QAE3C","sources":["<anon>","src/code/cycle.ts"],"sourcesContent":["class myWebComponent extends HTMLElement {\n    constructor(){\n        super();\n        let webcomponent = document.createElement(\"p\");\n        webcomponent.innerHTML = \"[WEB COMPONENT]\";\n        const shadow = this.attachShadow({\n            mode: \"closed\"\n        });\n        shadow.appendChild(webcomponent);\n        console.log(\"Created\");\n    }\n    static get observedAttributes() {\n        return [\n            \"color\"\n        ];\n    }\n    connectedCallback() {\n        console.log(\"Added to DOM\");\n    }\n    disconnectedCallback() {\n        console.log(\"Removed from DOM\");\n    }\n    attributeChangedCallback() {\n        console.log(\"Changed attributes\");\n    }\n}\ncustomElements.define(\"my-web-component\", myWebComponent);\nlet add = document.getElementById(\"add\");\nif (add != null) {\n    add.innerHTML = \"Add webcomponent\";\n    add.onclick = function() {\n        let webcomponent = document.createElement(\"my-web-component\");\n        document.body.appendChild(webcomponent);\n    };\n}\nlet rem = document.getElementById(\"delete\");\nif (rem != null) {\n    rem.innerHTML = \"Delete webcomponent\";\n    rem.onclick = function() {\n        let webcomponent = document.querySelector(\"my-web-component\");\n        if (webcomponent != null) webcomponent.remove();\n    };\n}\nlet edit = document.getElementById(\"edit\");\nif (edit != null) {\n    edit.innerHTML = \"Edit webcomponent\";\n    edit.onclick = function() {\n        let webcomponent = document.querySelector(\"my-web-component\");\n        if (webcomponent != null) webcomponent.setAttribute(\"color\", \"black\");\n    };\n}\n\n//# sourceMappingURL=cycle.6278862c.js.map\n","class myWebComponent extends HTMLElement {\n\n    constructor() {\n        super();\n        let webcomponent: HTMLElement = document.createElement(\"p\");\n        webcomponent.innerHTML = \"[WEB COMPONENT]\";\n        const shadow: ShadowRoot = this.attachShadow({ mode: 'closed' });\n        shadow.appendChild(webcomponent);\n        console.log(\"Created\");\n    }\n\n    static get observedAttributes() {\n        return [\"color\"];\n    } \n\n    connectedCallback() {\n        console.log(\"Added to DOM\");\n    }\n\n    disconnectedCallback() {\n        console.log(\"Removed from DOM\");\n    }\n\n    attributeChangedCallback() {\n        console.log(\"Changed attributes\");\n    }\n};\n\ncustomElements.define('my-web-component', myWebComponent);\nlet add: HTMLElement | null = document.getElementById(\"add\");\nif (add != null) {\n    add.innerHTML = \"Add webcomponent\";\n    add.onclick = function () {\n        let webcomponent: HTMLElement = document.createElement('my-web-component');\n        document.body.appendChild(webcomponent);\n    }\n}\nlet rem: HTMLElement | null = document.getElementById(\"delete\");\nif (rem != null) {\n    rem.innerHTML = \"Delete webcomponent\";\n    rem.onclick = function () {\n        let webcomponent: HTMLElement | null = document.querySelector('my-web-component');\n        if (webcomponent != null) {\n            webcomponent.remove();\n        }\n    }\n}\nlet edit: HTMLElement | null = document.getElementById(\"edit\");\nif (edit != null) {\n    edit.innerHTML = \"Edit webcomponent\";\n    edit.onclick = function () {\n        let webcomponent: HTMLElement | null = document.querySelector('my-web-component');\n        if (webcomponent != null) {\n            webcomponent.setAttribute(\"color\", \"black\");\n        }\n    }\n}\n"],"names":["myWebComponent","HTMLElement","constructor","webcomponent","document","createElement","innerHTML","shadow","attachShadow","mode","appendChild","console","log","observedAttributes","connectedCallback","disconnectedCallback","attributeChangedCallback","customElements","define","add","getElementById","onclick","body","rem","querySelector","remove","edit","setAttribute"],"version":3,"file":"cycle.6278862c.js.map"}